name: Test Script

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apache2 nginx certbot python3-certbot-apache python3-certbot-nginx netcat-openbsd

      - name: Make script executable
        run: chmod +x ./lecbh.sh

      - name: Configure hosts file for testing with valid domain
        run: |
          # Use a domain with a valid TLD for Let's Encrypt testing
          TEST_DOMAIN="test-$(date +%s).example.org"
          echo "Using test domain: $TEST_DOMAIN"

          # Add the test domain to hosts file
          echo "127.0.0.1 $TEST_DOMAIN" | sudo tee -a /etc/hosts

          # Verify it works
          ping -c 1 $TEST_DOMAIN

      - name: Create test wrapper script for Apache
        run: |
          # Create a wrapper script that sets up the environment for Apache testing
          TEST_DOMAIN="test-$(date +%s).example.org"
          cat > test_apache.sh << 'EOF'
          #!/bin/bash
          # Set up environment for Apache testing
          sudo systemctl start apache2
          sudo systemctl status apache2

          # Run the actual script with Apache
          sudo ./lecbh.sh --dry-run --unattended --verbose

          # Store the exit code
          EXIT_CODE=$?

          # Return the exit code
          exit $EXIT_CODE
          EOF

          chmod +x test_apache.sh

      - name: Create test wrapper script for Nginx
        run: |
          # Create a wrapper script that sets up the environment for Nginx testing
          TEST_DOMAIN="test-$(date +%s).example.org"
          cat > test_nginx.sh << 'EOF'
          #!/bin/bash
          # Set up environment for Nginx testing
          sudo systemctl stop apache2
          sudo systemctl start nginx
          sudo systemctl status nginx

          # Temporarily modify the default values for testing with Nginx
          export DEFAULT_SERVER="nginx"

          # Run the actual script with Nginx
          sudo -E ./lecbh.sh --dry-run --unattended --verbose

          # Store the exit code
          EXIT_CODE=$?

          # Return the exit code
          exit $EXIT_CODE
          EOF

          chmod +x test_nginx.sh

      - name: Create mock certbot for testing
        run: |
          # Create a mock certbot script that always succeeds in dry-run mode
          sudo mv /usr/bin/certbot /usr/bin/certbot.original

          cat > mock_certbot.sh << 'EOF'
          #!/bin/bash

          # Check if this is a dry-run
          if [[ "$*" == *"--dry-run"* ]]; then
            echo "Saving debug log to /var/log/letsencrypt/letsencrypt.log"
            echo "Account registered."
            echo "Simulating a certificate request..."
            echo "Dry run: simulating obtaining certificates..."
            echo "Congratulations! The dry run was successful."
            exit 0
          else
            # If not a dry run, use the original certbot
            /usr/bin/certbot.original "$@"
          fi
          EOF

          chmod +x mock_certbot.sh
          sudo cp mock_certbot.sh /usr/bin/certbot

      - name: Test with Apache
        run: ./test_apache.sh

      - name: Test with Nginx
        run: ./test_nginx.sh
